{"version":3,"sources":["components/containers/header/header.jsx"],"names":["header","props","_this","Object","_usr_local_var_www_billing_www_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_usr_local_var_www_billing_www_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_usr_local_var_www_billing_www_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","dropdownOpen","toggleProfile","bind","_usr_local_var_www_billing_www_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","onSuccessFullLogout","toggleMobileMenu","setState","prevState","updatingUserAuthData","updatingToggleMobileSideBar","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_15__","icon","faBars","onClick","config","appName","reactstrap__WEBPACK_IMPORTED_MODULE_8__","isOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_9__","caret","faCog","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","disabled","src","userAuthData","pPhoto","alt","name","react_google_login__WEBPACK_IMPORTED_MODULE_13__","clientId","onLogoutSuccess","faSignOutAlt","Component","connect","dispatch","status","updateUserAuthData","flag","updateToggleMobileSideBar"],"mappings":"qPAYMA,cAEF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,cAAc,GAGlBR,EAAKS,cAAgBT,EAAKS,cAAcC,KAAnBT,OAAAU,EAAA,EAAAV,CAAAD,IACrBA,EAAKY,oBAAsBZ,EAAKY,oBAAoBF,KAAzBT,OAAAU,EAAA,EAAAV,CAAAD,IAC3BA,EAAKa,iBAAmBb,EAAKa,iBAAiBH,KAAtBT,OAAAU,EAAA,EAAAV,CAAAD,IARVA,+EAYdG,KAAKW,SAAS,SAAAC,GAAS,MAAK,CACxBP,cAAeO,EAAUP,8DAK7BL,KAAKJ,MAAMiB,qBAAqB,+CAIhCb,KAAKJ,MAAMkB,6BAA4B,oCAIvC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,KAAMC,IAAQH,UAAU,UAAUI,QAAStB,KAAKU,mBACjEK,EAAAC,EAAAC,cAAA,YAAOjB,KAAKJ,MAAM2B,OAAOC,WAGjCT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUC,OAAQ1B,KAAKI,MAAMC,aAAcsB,OAAQ3B,KAAKM,cAAeY,UAAU,eAC7EH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAgBC,OAAK,GACjBd,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,KAAMU,IAAOZ,UAAU,eAE5CH,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACIhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAcd,UAAU,eAAee,UAAQ,GAC3ClB,EAAAC,EAAAC,cAAA,OAAKiB,IAAKlC,KAAKJ,MAAMuC,aAAaC,OAAQC,IAAK,GAAGnB,UAAU,eAC5DH,EAAAC,EAAAC,cAAA,YAAOjB,KAAKJ,MAAMuC,aAAaG,OAEnCvB,EAAAC,EAAAC,cAACsB,EAAA,aAAD,CACIrB,UAAU,6BACVsB,SAAUxC,KAAKJ,MAAM2B,OAAOiB,SAC5BC,gBAAiBzC,KAAKS,oBACtBW,MAAM,GAEFL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,KAAMsB,MACvB3B,EAAAC,EAAAC,cAAA,mCApDX0B,aA4ENC,sBAdS,SAAAxC,GAAK,MAAK,CAC9BmB,OAAQnB,EAAMmB,OACdY,aAAc/B,EAAM+B,eAGG,SAAAU,GAAQ,MAAI,CACnChC,qBADmC,SACdiC,GACjBD,EAASE,YAAmBD,KAEhChC,4BAJmC,SAIPkC,GACxBH,EAASI,YAA0BD,OAI5BJ,CAA6CjD","file":"static/js/6.eba29805.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nimport './header.css';\n\nimport { GoogleLogout } from 'react-google-login';\n\nimport { updateUserAuthData, updateToggleMobileSideBar } from '../../../store/actions'; \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog, faSignOutAlt, faBars } from '@fortawesome/free-solid-svg-icons'\n\nclass header extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n\n        this.toggleProfile = this.toggleProfile.bind(this);\n        this.onSuccessFullLogout = this.onSuccessFullLogout.bind(this);\n        this.toggleMobileMenu = this.toggleMobileMenu.bind(this);\n    }\n\n    toggleProfile(){\n        this.setState(prevState => ({\n            dropdownOpen: !prevState.dropdownOpen\n        }));\n    }\n\n    onSuccessFullLogout(){\n        this.props.updatingUserAuthData({});\n    }\n\n    toggleMobileMenu(){\n        this.props.updatingToggleMobileSideBar(true);\n    }\n\n    render() {\n        return (\n            <div className=\"bc_header\">\n                <div className=\"bch_main\">\n                    <div className=\"bch_mobile\">\n                        <FontAwesomeIcon icon={faBars} className=\"mh_menu\" onClick={this.toggleMobileMenu} />\n                        <span>{this.props.config.appName}</span>\n                    </div>\n                </div>\n                <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleProfile} className=\"bch_setting\">\n                    <DropdownToggle caret>\n                        <FontAwesomeIcon icon={faCog} className=\"bchs_icon\" />\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem className=\"bchs_profile\" disabled>\n                            <img src={this.props.userAuthData.pPhoto} alt ='' className=\"bchsp_icon\"/>\n                            <span>{this.props.userAuthData.name}</span>\n                        </DropdownItem>\n                        <GoogleLogout\n                            className=\"dropdown-item bchsp_logout\"\n                            clientId={this.props.config.clientId}\n                            onLogoutSuccess={this.onSuccessFullLogout}\n                            icon={false}\n                            >\n                                <FontAwesomeIcon icon={faSignOutAlt} />\n                                <span> Logout </span>\n                            </GoogleLogout>\n                        {/* <DropdownItem divider /> */}\n                    </DropdownMenu>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    config: state.config,\n    userAuthData: state.userAuthData\n});\n  \nconst mapDispatchToProps = dispatch =>({\n    updatingUserAuthData(status){\n        dispatch(updateUserAuthData(status))\n    },\n    updatingToggleMobileSideBar(flag){\n        dispatch(updateToggleMobileSideBar(flag))\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(header);"],"sourceRoot":""}